name: Flutter CI

# ワークフローをトリガーするイベントを定義
on:
  push:
    branches:
      - main  # mainブランチへのpush時に実行
  pull_request:
    branches:
      - main  # mainブランチへのPR作成時に実行

# ワークフロー内のジョブを定義
jobs:
  build:
    # ジョブが実行される仮想環境を指定
    runs-on: ubuntu-latest

    steps:
      # リポジトリのコードをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v5

      # fvmのバージョンを取得
      - name: "Read flutter version from fvm config"
        id: flutter_info
        run: |
          FLUTTER_VERSION=$(jq -r '.flutterSdkVersion' ./.fvm/fvm_config.json)
          echo "FLUTTER_VERSION=$FLUTTER_VERSION" >> $GITHUB_ENV
        shell: bash

      # Flutterのセットアップ
      - name: "Setup Flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}  # 取得したFlutterバージョンを使用
          cache: true

      # flutter cleanを実行してキャッシュを削除
      - name: Clean Flutter build
        run: flutter clean

      # Flutterの依存関係をインストール
      - name: Install dependencies
        run: flutter pub get

      # フォーマットチェックを追加
      - name: Check code formatting
        run: dart format --set-exit-if-changed .

      # リントチェックを実行
      - name: Run linter
        run: flutter analyze

      # テストを実行
      - name: Run tests
        run: flutter test

      # Androidのビルド（Secretsから署名情報を取得）
      - name: Build APK (Android)
        run: flutter build apk --debug

      # ビルドしたapkをgithub Actionsアップロード
      - name: "Deploy apk 🚀"
        uses: actions/upload-artifact@v4
        with:
          name: release-apk  # アーティファクトの名前
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 7 # 7日間保存